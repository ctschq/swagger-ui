{"info":{"version":"1.0","termsOfService":"PropLogistics Terms of Service","contact":{"email":"jamie@ciglogistics.com"},"title":"PropLogistics REST API","description":"PropLogistics REST API","license":{"name":"PropLogistics License","url":"N\/A"}},"swagger":"2.0","host":"yourhost.com","basePath":"\/api","schemes":["https","http"],"definitions":{"testSchema":{"required":["id","name"],"properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}}}},"paths":{"\/demurrage-contracts":{"get":{"description":"List instances of DemurrageContracts, filtered by given criteria.","responses":{"200":{"description":"DemurrageContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/demurrage-contracts\/{id}":{"get":{"description":"Find DemurrageContracts by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of DemurrageContracts that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"DemurrageContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"put":{"description":"Update DemurrageContracts by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of DemurrageContracts that needs to be updated","required":true,"type":"integer","allowMultiple":false},{"name":"body","in":"body","description":"DemurrageContracts object that needs to be added to the store","required":true,"allowMultiple":false}],"responses":{"200":{"description":"DemurrageContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"patch":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"DemurrageContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"post":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"DemurrageContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"delete":{"description":"","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of DemurrageContracts that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"DemurrageContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/demurrage-contracts\/{id}\/--construct":{"get":{"description":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}},"\/demurrage-contracts\/parse-request":{"get":{"description":false}},"\/demurrage-contracts\/require-login":{"get":{"description":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}},"\/demurrage-contracts\/{id}\/output":{"get":{"description":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}},"\/demurrage-contracts\/get-swagger":{"get":{"description":false}},"\/demurrage-contracts\/{id}\/route":{"get":{"description":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}},"\/drafts":{"get":{"description":"List instances of Drafts, filtered by given criteria.","responses":{"200":{"description":"Drafts response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/drafts\/{id}":{"get":{"description":"Find Drafts by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Drafts that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"Drafts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"put":{"description":"Update Drafts by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Drafts that needs to be updated","required":true,"type":"integer","allowMultiple":false},{"name":"body","in":"body","description":"Drafts object that needs to be added to the store","required":true,"allowMultiple":false}],"responses":{"200":{"description":"Drafts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"patch":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"Drafts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"post":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"Drafts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"delete":{"description":"","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Drafts that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"Drafts response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/drafts\/{id}\/--construct":{"get":{"description":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}},"\/drafts\/parse-request":{"get":{"description":false}},"\/drafts\/require-login":{"get":{"description":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}},"\/drafts\/{id}\/output":{"get":{"description":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}},"\/drafts\/get-swagger":{"get":{"description":false}},"\/drafts\/{id}\/route":{"get":{"description":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}},"\/inbounds":{"get":{"description":"List instances of Inbounds, filtered by given criteria.","responses":{"200":{"description":"Inbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/inbounds\/{id}":{"get":{"description":"Find Inbounds by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Inbounds that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"Inbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"put":{"description":"Update Inbounds by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Inbounds that needs to be updated","required":true,"type":"integer","allowMultiple":false},{"name":"body","in":"body","description":"Inbounds object that needs to be added to the store","required":true,"allowMultiple":false}],"responses":{"200":{"description":"Inbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"patch":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"Inbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"post":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"Inbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"delete":{"description":"","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Inbounds that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"Inbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/inbounds\/{id}\/--construct":{"get":{"description":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}},"\/inbounds\/parse-request":{"get":{"description":false}},"\/inbounds\/require-login":{"get":{"description":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}},"\/inbounds\/{id}\/output":{"get":{"description":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}},"\/inbounds\/get-swagger":{"get":{"description":false}},"\/inbounds\/{id}\/route":{"get":{"description":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}},"\/invoices":{"get":{"description":"List instances of Invoices, filtered by given criteria.","responses":{"200":{"description":"Invoices response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/invoices\/{id}":{"get":{"description":"Find Invoices by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Invoices that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"Invoices response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"put":{"description":"Update Invoices by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Invoices that needs to be updated","required":true,"type":"integer","allowMultiple":false},{"name":"body","in":"body","description":"Invoices object that needs to be added to the store","required":true,"allowMultiple":false}],"responses":{"200":{"description":"Invoices response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"patch":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"Invoices response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"post":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"Invoices response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"delete":{"description":"","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Invoices that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"Invoices response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/invoices\/{id}\/--construct":{"get":{"description":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}},"\/invoices\/parse-request":{"get":{"description":false}},"\/invoices\/require-login":{"get":{"description":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}},"\/invoices\/{id}\/output":{"get":{"description":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}},"\/invoices\/get-swagger":{"get":{"description":false}},"\/invoices\/{id}\/route":{"get":{"description":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}},"\/misc-charges":{"get":{"description":"List instances of MiscCharges, filtered by given criteria.","responses":{"200":{"description":"MiscCharges response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/misc-charges\/{id}":{"get":{"description":"Find MiscCharges by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of MiscCharges that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"MiscCharges response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"put":{"description":"Update MiscCharges by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of MiscCharges that needs to be updated","required":true,"type":"integer","allowMultiple":false},{"name":"body","in":"body","description":"MiscCharges object that needs to be added to the store","required":true,"allowMultiple":false}],"responses":{"200":{"description":"MiscCharges response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"patch":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"MiscCharges response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"post":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"MiscCharges response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"delete":{"description":"","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of MiscCharges that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"MiscCharges response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/misc-charges\/{id}\/--construct":{"get":{"description":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}},"\/misc-charges\/parse-request":{"get":{"description":false}},"\/misc-charges\/require-login":{"get":{"description":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}},"\/misc-charges\/{id}\/output":{"get":{"description":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}},"\/misc-charges\/get-swagger":{"get":{"description":false}},"\/misc-charges\/{id}\/route":{"get":{"description":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}},"\/outbounds":{"get":{"description":"List instances of Outbounds, filtered by given criteria.","responses":{"200":{"description":"Outbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/outbounds\/{id}":{"get":{"description":"Find Outbounds by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Outbounds that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"Outbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"put":{"description":"Update Outbounds by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Outbounds that needs to be updated","required":true,"type":"integer","allowMultiple":false},{"name":"body","in":"body","description":"Outbounds object that needs to be added to the store","required":true,"allowMultiple":false}],"responses":{"200":{"description":"Outbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"patch":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"Outbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"post":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"Outbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"delete":{"description":"","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Outbounds that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"Outbounds response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/outbounds\/{id}\/--construct":{"get":{"description":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}},"\/outbounds\/parse-request":{"get":{"description":false}},"\/outbounds\/require-login":{"get":{"description":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}},"\/outbounds\/{id}\/output":{"get":{"description":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}},"\/outbounds\/get-swagger":{"get":{"description":false}},"\/outbounds\/{id}\/route":{"get":{"description":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}},"\/scales":{"get":{"description":"List instances of Scales, filtered by given criteria.","responses":{"200":{"description":"Scales response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/scales\/{id}":{"get":{"description":"Find Scales by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Scales that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"Scales response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"put":{"description":"Update Scales by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Scales that needs to be updated","required":true,"type":"integer","allowMultiple":false},{"name":"body","in":"body","description":"Scales object that needs to be added to the store","required":true,"allowMultiple":false}],"responses":{"200":{"description":"Scales response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"patch":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"Scales response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"post":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"Scales response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"delete":{"description":"","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of Scales that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"Scales response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/scales\/{id}\/--construct":{"get":{"description":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}},"\/scales\/parse-request":{"get":{"description":false}},"\/scales\/require-login":{"get":{"description":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}},"\/scales\/{id}\/output":{"get":{"description":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}},"\/scales\/get-swagger":{"get":{"description":false}},"\/scales\/{id}\/route":{"get":{"description":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}},"\/transload-contracts":{"get":{"description":"List instances of TransloadContracts, filtered by given criteria.","responses":{"200":{"description":"TransloadContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/transload-contracts\/{id}":{"get":{"description":"Find TransloadContracts by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of TransloadContracts that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"TransloadContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"put":{"description":"Update TransloadContracts by ID","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of TransloadContracts that needs to be updated","required":true,"type":"integer","allowMultiple":false},{"name":"body","in":"body","description":"TransloadContracts object that needs to be added to the store","required":true,"allowMultiple":false}],"responses":{"200":{"description":"TransloadContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"patch":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"TransloadContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"post":{"description":"This is an alias of the PUT operation in this path","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[],"responses":{"200":{"description":"TransloadContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}},"delete":{"description":"","produces":["application\/json","application\/xml","text\/xml","text\/html"],"parameters":[{"name":"id","in":"path","description":"ID of TransloadContracts that needs to be updated","required":true,"type":"integer","allowMultiple":false}],"responses":{"200":{"description":"TransloadContracts response","schema":{"$ref":"#\/definitions\/testSchema"}}}}},"\/transload-contracts\/{id}\/--construct":{"get":{"description":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}},"\/transload-contracts\/parse-request":{"get":{"description":false}},"\/transload-contracts\/require-login":{"get":{"description":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}},"\/transload-contracts\/{id}\/output":{"get":{"description":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}},"\/transload-contracts\/get-swagger":{"get":{"description":false}},"\/transload-contracts\/{id}\/route":{"get":{"description":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}}}}