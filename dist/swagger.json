{"info":{"version":"1.0","termsOfService":"PropLogistics Terms of Service","contact":{"email":"jamie@ciglogistics.com"},"description":"PropLogistics REST API","license":{"name":"PropLogistics License","url":"N\/A"}},"swagger":"2.0","host":"","basePath":"\/api","schemes":"https","definitions":"","apis":[[{"path":"\/demurrage-contracts","operations":[{"method":"GET"},{"method":"POST"}]},{"path":"\/demurrage-contracts\/{id}","operations":[{"method":"GET","summary":"Find DemurrageContracts by ID"},{"method":"PUT","summary":"Update DemurrageContracts by ID","parameters":[{"name":"id","description":"ID of DemurrageContracts that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false},{"name":"body","description":"DemurrageContracts object that needs to be added to the store","required":true,"type":"DemurrageContracts","paramType":"body","allowMultiple":false}]},{"method":"PATCH","notes":"This is an alias of the PUT operation in this path"},{"method":"POST","notes":"This is an alias of the PUT operation in this path"},{"method":"DELETE","summary":"Delete DemurrageContracts by ID","parameters":[{"name":"id","description":"ID of DemurrageContracts that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false}]}]},{"path":"\/demurrage-contracts\/{id}\/--construct","operations":[{"method":"GET","summary":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}]},{"path":"\/demurrage-contracts\/parse-request","operations":[{"method":"GET","summary":false}]},{"path":"\/demurrage-contracts\/require-login","operations":[{"method":"GET","summary":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}]},{"path":"\/demurrage-contracts\/{id}\/output","operations":[{"method":"GET","summary":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}]},{"path":"\/demurrage-contracts\/get-swagger","operations":[{"method":"GET","summary":false}]},{"path":"\/demurrage-contracts\/{id}\/route","operations":[{"method":"GET","summary":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}]}],[{"path":"\/drafts","operations":[{"method":"GET"},{"method":"POST"}]},{"path":"\/drafts\/{id}","operations":[{"method":"GET","summary":"Find Drafts by ID"},{"method":"PUT","summary":"Update Drafts by ID","parameters":[{"name":"id","description":"ID of Drafts that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false},{"name":"body","description":"Drafts object that needs to be added to the store","required":true,"type":"Drafts","paramType":"body","allowMultiple":false}]},{"method":"PATCH","notes":"This is an alias of the PUT operation in this path"},{"method":"POST","notes":"This is an alias of the PUT operation in this path"},{"method":"DELETE","summary":"Delete Drafts by ID","parameters":[{"name":"id","description":"ID of Drafts that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false}]}]},{"path":"\/drafts\/{id}\/--construct","operations":[{"method":"GET","summary":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}]},{"path":"\/drafts\/parse-request","operations":[{"method":"GET","summary":false}]},{"path":"\/drafts\/require-login","operations":[{"method":"GET","summary":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}]},{"path":"\/drafts\/{id}\/output","operations":[{"method":"GET","summary":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}]},{"path":"\/drafts\/get-swagger","operations":[{"method":"GET","summary":false}]},{"path":"\/drafts\/{id}\/route","operations":[{"method":"GET","summary":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}]}],[{"path":"\/inbounds","operations":[{"method":"GET"},{"method":"POST"}]},{"path":"\/inbounds\/{id}","operations":[{"method":"GET","summary":"Find Inbounds by ID"},{"method":"PUT","summary":"Update Inbounds by ID","parameters":[{"name":"id","description":"ID of Inbounds that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false},{"name":"body","description":"Inbounds object that needs to be added to the store","required":true,"type":"Inbounds","paramType":"body","allowMultiple":false}]},{"method":"PATCH","notes":"This is an alias of the PUT operation in this path"},{"method":"POST","notes":"This is an alias of the PUT operation in this path"},{"method":"DELETE","summary":"Delete Inbounds by ID","parameters":[{"name":"id","description":"ID of Inbounds that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false}]}]},{"path":"\/inbounds\/{id}\/--construct","operations":[{"method":"GET","summary":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}]},{"path":"\/inbounds\/parse-request","operations":[{"method":"GET","summary":false}]},{"path":"\/inbounds\/require-login","operations":[{"method":"GET","summary":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}]},{"path":"\/inbounds\/{id}\/output","operations":[{"method":"GET","summary":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}]},{"path":"\/inbounds\/get-swagger","operations":[{"method":"GET","summary":false}]},{"path":"\/inbounds\/{id}\/route","operations":[{"method":"GET","summary":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}]}],[{"path":"\/invoices","operations":[{"method":"GET"},{"method":"POST"}]},{"path":"\/invoices\/{id}","operations":[{"method":"GET","summary":"Find Invoices by ID"},{"method":"PUT","summary":"Update Invoices by ID","parameters":[{"name":"id","description":"ID of Invoices that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false},{"name":"body","description":"Invoices object that needs to be added to the store","required":true,"type":"Invoices","paramType":"body","allowMultiple":false}]},{"method":"PATCH","notes":"This is an alias of the PUT operation in this path"},{"method":"POST","notes":"This is an alias of the PUT operation in this path"},{"method":"DELETE","summary":"Delete Invoices by ID","parameters":[{"name":"id","description":"ID of Invoices that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false}]}]},{"path":"\/invoices\/{id}\/--construct","operations":[{"method":"GET","summary":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}]},{"path":"\/invoices\/parse-request","operations":[{"method":"GET","summary":false}]},{"path":"\/invoices\/require-login","operations":[{"method":"GET","summary":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}]},{"path":"\/invoices\/{id}\/output","operations":[{"method":"GET","summary":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}]},{"path":"\/invoices\/get-swagger","operations":[{"method":"GET","summary":false}]},{"path":"\/invoices\/{id}\/route","operations":[{"method":"GET","summary":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}]}],[{"path":"\/misc-charges","operations":[{"method":"GET"},{"method":"POST"}]},{"path":"\/misc-charges\/{id}","operations":[{"method":"GET","summary":"Find MiscCharges by ID"},{"method":"PUT","summary":"Update MiscCharges by ID","parameters":[{"name":"id","description":"ID of MiscCharges that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false},{"name":"body","description":"MiscCharges object that needs to be added to the store","required":true,"type":"MiscCharges","paramType":"body","allowMultiple":false}]},{"method":"PATCH","notes":"This is an alias of the PUT operation in this path"},{"method":"POST","notes":"This is an alias of the PUT operation in this path"},{"method":"DELETE","summary":"Delete MiscCharges by ID","parameters":[{"name":"id","description":"ID of MiscCharges that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false}]}]},{"path":"\/misc-charges\/{id}\/--construct","operations":[{"method":"GET","summary":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}]},{"path":"\/misc-charges\/parse-request","operations":[{"method":"GET","summary":false}]},{"path":"\/misc-charges\/require-login","operations":[{"method":"GET","summary":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}]},{"path":"\/misc-charges\/{id}\/output","operations":[{"method":"GET","summary":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}]},{"path":"\/misc-charges\/get-swagger","operations":[{"method":"GET","summary":false}]},{"path":"\/misc-charges\/{id}\/route","operations":[{"method":"GET","summary":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}]}],[{"path":"\/outbounds","operations":[{"method":"GET"},{"method":"POST"}]},{"path":"\/outbounds\/{id}","operations":[{"method":"GET","summary":"Find Outbounds by ID"},{"method":"PUT","summary":"Update Outbounds by ID","parameters":[{"name":"id","description":"ID of Outbounds that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false},{"name":"body","description":"Outbounds object that needs to be added to the store","required":true,"type":"Outbounds","paramType":"body","allowMultiple":false}]},{"method":"PATCH","notes":"This is an alias of the PUT operation in this path"},{"method":"POST","notes":"This is an alias of the PUT operation in this path"},{"method":"DELETE","summary":"Delete Outbounds by ID","parameters":[{"name":"id","description":"ID of Outbounds that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false}]}]},{"path":"\/outbounds\/{id}\/--construct","operations":[{"method":"GET","summary":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}]},{"path":"\/outbounds\/parse-request","operations":[{"method":"GET","summary":false}]},{"path":"\/outbounds\/require-login","operations":[{"method":"GET","summary":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}]},{"path":"\/outbounds\/{id}\/output","operations":[{"method":"GET","summary":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}]},{"path":"\/outbounds\/get-swagger","operations":[{"method":"GET","summary":false}]},{"path":"\/outbounds\/{id}\/route","operations":[{"method":"GET","summary":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}]}],[{"path":"\/scales","operations":[{"method":"GET"},{"method":"POST"}]},{"path":"\/scales\/{id}","operations":[{"method":"GET","summary":"Find Scales by ID"},{"method":"PUT","summary":"Update Scales by ID","parameters":[{"name":"id","description":"ID of Scales that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false},{"name":"body","description":"Scales object that needs to be added to the store","required":true,"type":"Scales","paramType":"body","allowMultiple":false}]},{"method":"PATCH","notes":"This is an alias of the PUT operation in this path"},{"method":"POST","notes":"This is an alias of the PUT operation in this path"},{"method":"DELETE","summary":"Delete Scales by ID","parameters":[{"name":"id","description":"ID of Scales that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false}]}]},{"path":"\/scales\/{id}\/--construct","operations":[{"method":"GET","summary":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}]},{"path":"\/scales\/parse-request","operations":[{"method":"GET","summary":false}]},{"path":"\/scales\/require-login","operations":[{"method":"GET","summary":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}]},{"path":"\/scales\/{id}\/output","operations":[{"method":"GET","summary":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}]},{"path":"\/scales\/get-swagger","operations":[{"method":"GET","summary":false}]},{"path":"\/scales\/{id}\/route","operations":[{"method":"GET","summary":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}]}],[{"path":"\/transload-contracts","operations":[{"method":"GET"},{"method":"POST"}]},{"path":"\/transload-contracts\/{id}","operations":[{"method":"GET","summary":"Find TransloadContracts by ID"},{"method":"PUT","summary":"Update TransloadContracts by ID","parameters":[{"name":"id","description":"ID of TransloadContracts that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false},{"name":"body","description":"TransloadContracts object that needs to be added to the store","required":true,"type":"TransloadContracts","paramType":"body","allowMultiple":false}]},{"method":"PATCH","notes":"This is an alias of the PUT operation in this path"},{"method":"POST","notes":"This is an alias of the PUT operation in this path"},{"method":"DELETE","summary":"Delete TransloadContracts by ID","parameters":[{"name":"id","description":"ID of TransloadContracts that needs to be updated","required":true,"type":"integer","paramType":"path","allowMultiple":false}]}]},{"path":"\/transload-contracts\/{id}\/--construct","operations":[{"method":"GET","summary":"\/**\n     * Constructor\n     *\n     * @param Request $request\n     * @param Response $response\n     *\/"}]},{"path":"\/transload-contracts\/parse-request","operations":[{"method":"GET","summary":false}]},{"path":"\/transload-contracts\/require-login","operations":[{"method":"GET","summary":"\/**\n     * Check for user login, and thow exception if missing\n     *\/"}]},{"path":"\/transload-contracts\/{id}\/output","operations":[{"method":"GET","summary":"\/**\n     * Output the data in the correct format\n     * Right now we're just sending sending JSON with Klein's json methd\n     * Later we might check some config value here to format the data as XML or something else\n     *\n     * @param $data array Data to output\n     *\/"}]},{"path":"\/transload-contracts\/get-swagger","operations":[{"method":"GET","summary":false}]},{"path":"\/transload-contracts\/{id}\/route","operations":[{"method":"GET","summary":"\/**\n     * Attempt to route the request to the correct action method\n     *\n     * @param Request $request\n     * @param Response $response\n     * @return bool\n     *\/"}]}]]}